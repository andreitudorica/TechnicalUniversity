library ieee;
use ieee.std_logic_1164.all;

entity  MEMORIE_ROM is
  port ( A_ROM : in BIT_VECTOR(3 downto 0);  
    CS_ROM: in BIT;
         D_ROM : out BIT_VECTOR(7 downto 0) );
end entity MEMORIE_ROM;

architecture a of MEMORIE_ROM is
  type matrice is array ( 0 to 15) of BIT_VECTOR(7 downto 0);
  constant my_Rom : matrice := ( "00000000", "00000001","00000010", "00000011", "00000100", "00000101",
"00000110", "00000111", "00001000", "00001001", "00001010", "00001011", "00001100", "00001101",
"00001110", "00001111");
  
begin
   process (CS_ROM,A_ROM)
   begin  
  if CS_ROM='1' then
     case A_ROM is
       when "0000" => D_ROM <= my_rom(0);
       when "0001" => D_ROM <= my_rom(1);
       when "0010" => D_ROM <= my_rom(2);
       when "0011" => D_ROM <= my_rom(3);
       when "0100" => D_ROM <= my_rom(4);
       when "0101" => D_ROM <= my_rom(5);
       when "0110" => D_ROM <= my_rom(6);
       when "0111" => D_ROM <= my_rom(7);
       when "1000" => D_ROM <= my_rom(8);
       when "1001" => D_ROM <= my_rom(9);
       when "1010" => D_ROM <= my_rom(10);
       when "1011" => D_ROM <= my_rom(11);
       when "1100" => D_ROM <= my_rom(12);
       when "1101" => D_ROM <= my_rom(13);
       when "1110" => D_ROM <= my_rom(14);
       when "1111" => D_ROM <= my_rom(15);
  end case;
  end if;
  end process;
end a;